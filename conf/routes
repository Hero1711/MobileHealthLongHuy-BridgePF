# Top level views
OPTIONS    /*all                       @controllers.ApplicationController.preflight(all: String)
GET        /                           @controllers.ApplicationController.loadApp
GET        /index.html                 @controllers.ApplicationController.loadApp
GET        /mobile/verifyEmail.html    @controllers.ApplicationController.verifyEmail
GET        /mobile/resetPassword.html  @controllers.ApplicationController.resetPassword

# API - Authentication
POST   /api/v1/auth/signIn                  @controllers.AuthenticationController.signIn
GET    /api/v1/auth/signOut                 @controllers.AuthenticationController.signOut
POST   /api/v1/auth/requestResetPassword    @controllers.AuthenticationController.requestResetPassword
POST   /api/v1/auth/resetPassword           @controllers.AuthenticationController.resetPassword
POST   /api/v1/auth/signUp                  @controllers.AuthenticationController.signUp
POST   /api/v1/auth/verifyEmail             @controllers.AuthenticationController.verifyEmail
POST   /api/v1/auth/resendEmailVerification @controllers.AuthenticationController.resendEmailVerification

# API - Users
GET    /api/v1/profile                   @controllers.UserProfileController.getUserProfile
POST   /api/v1/profile                   @controllers.UserProfileController.updateUserProfile

# API - User Settings
POST   /api/v1/profile/external-id       @controllers.UserProfileController.createExternalIdentifier
POST   /api/v1/profile/unsubscribe       @controllers.EmailController.unsubscribeFromEmail
GET    /api/v1/profile/unsubscribe       @controllers.EmailController.unsubscribeFromEmail

# API - Surveys & Survey Response v2
GET    /api/v2/surveyresponses/:guid                                @controllers.SurveyResponseController.getSurveyResponse(guid: String)
POST   /api/v2/surveyresponses/:guid                                @controllers.SurveyResponseController.appendSurveyAnswers(guid: String)
GET    /api/v2/surveys/:surveyGuid/revisions/published              @controllers.SurveyController.getSurveyMostRecentlyPublishedVersionForUser(surveyGuid: String)
GET    /api/v2/surveys/:surveyGuid/revisions/:createdOn             @controllers.SurveyController.getSurveyForUser(surveyGuid: String, createdOn: String)
POST   /api/v2/surveys/:surveyGuid/revisions/:createdOn             @controllers.SurveyResponseController.createSurveyResponse(surveyGuid: String, createdOn: String)
POST   /api/v2/surveys/:surveyGuid/revisions/:createdOn/:identifier @controllers.SurveyResponseController.createSurveyResponseWithIdentifier(surveyGuid: String, createdOn: String, identifier: String)

# API - Schedules
GET    /api/v1/schedules   @controllers.ScheduleController.getSchedules

# API - Tasks
GET    /api/v1/tasks       @controllers.TaskController.getTasks(until: java.lang.String ?= null)
POST   /api/v1/tasks       @controllers.TaskController.updateTasks()

# API - Consent
POST   /api/v1/consent                       @controllers.ConsentController.giveV1
POST   /api/v2/consent                       @controllers.ConsentController.giveV2
GET    /api/v1/consent                       @controllers.ConsentController.getConsentSignature
GET    /api/v2/consent                       @controllers.ConsentController.getConsentSignature
POST   /api/v1/consent/email                 @controllers.ConsentController.emailCopy
POST   /api/v1/consent/dataSharing/suspend   @controllers.ConsentController.suspendDataSharing
POST   /api/v1/consent/dataSharing/resume    @controllers.ConsentController.resumeDataSharing
POST   /api/v2/consent/dataSharing           @controllers.ConsentController.changeSharingScope

# API - Upload
POST   /api/v1/upload                  @controllers.UploadController.upload
POST   /api/v1/upload/:id/complete     @controllers.UploadController.uploadComplete(id: String)
GET    /api/v1/upload/:id/status       @controllers.UploadController.getValidationStatus(id: String)

# Researchers - Surveys
GET    /researchers/v1/surveys                                           @controllers.SurveyController.getAllSurveysMostRecentVersion
POST   /researchers/v1/surveys                                           @controllers.SurveyController.createSurvey
GET    /researchers/v1/surveys/recent                                    @controllers.SurveyController.getAllSurveysMostRecentVersion2
GET    /researchers/v1/surveys/published                                 @controllers.SurveyController.getAllSurveysMostRecentlyPublishedVersion
GET    /researchers/v1/surveys/:identifier                               @controllers.SurveyController.getMostRecentPublishedSurveyVersionByIdentifier(identifier: String)
GET    /researchers/v1/surveys/:surveyGuid/revisions                     @controllers.SurveyController.getSurveyAllVersions(surveyGuid: String)
GET    /researchers/v1/surveys/:surveyGuid/revisions/recent              @controllers.SurveyController.getSurveyMostRecentVersion(surveyGuid: String)
GET    /researchers/v1/surveys/:surveyGuid/revisions/published           @controllers.SurveyController.getSurveyMostRecentlyPublishedVersion(surveyGuid: String)
POST   /researchers/v1/surveys/:surveyGuid/revisions/:createdOn/version  @controllers.SurveyController.versionSurvey(surveyGuid: String, createdOn: String)
POST   /researchers/v1/surveys/:surveyGuid/revisions/:createdOn/publish  @controllers.SurveyController.publishSurvey(surveyGuid: String, createdOn: String)
POST   /researchers/v1/surveys/:surveyGuid/revisions/:createdOn/close    @controllers.SurveyController.closeSurvey(surveyGuid: String, createdOn: String)
GET    /researchers/v1/surveys/:surveyGuid/revisions/:createdOn          @controllers.SurveyController.getSurvey(surveyGuid: String, createdOn: String)
POST   /researchers/v1/surveys/:surveyGuid/revisions/:createdOn          @controllers.SurveyController.updateSurvey(surveyGuid: String, createdOn: String)
DELETE /researchers/v1/surveys/:surveyGuid/revisions/:createdOn          @controllers.SurveyController.deleteSurvey(surveyGuid: String, createdOn: String)

# Researchers - Schedule Plans
GET    /researchers/v1/scheduleplans           @controllers.SchedulePlanController.getSchedulePlans
POST   /researchers/v1/scheduleplans           @controllers.SchedulePlanController.createSchedulePlan
GET    /researchers/v1/scheduleplans/:guid     @controllers.SchedulePlanController.getSchedulePlan(guid: String)
POST   /researchers/v1/scheduleplans/:guid     @controllers.SchedulePlanController.updateSchedulePlan(guid: String)
DELETE /researchers/v1/scheduleplans/:guid     @controllers.SchedulePlanController.deleteSchedulePlan(guid: String)

# Researchers - Study Consent Documents
GET    /researcher/v1/consents                      @controllers.StudyConsentController.getAllConsents
GET    /researcher/v1/consents/active               @controllers.StudyConsentController.getActiveConsent
GET    /researcher/v1/consents/:timestamp           @controllers.StudyConsentController.getConsent(timestamp: String)
POST   /researcher/v1/consents                      @controllers.StudyConsentController.addConsent
POST   /researcher/v1/consents/active/:timestamp    @controllers.StudyConsentController.setActiveConsent(timestamp: String)

# Researchers - Studies
GET    /researcher/v1/study              @controllers.StudyController.getStudyForResearcher
POST   /researcher/v1/study/participants @controllers.StudyController.sendStudyParticipantsRoster          
POST   /researcher/v1/study              @controllers.StudyController.updateStudyForResearcher

# Researchers - Upload Schemas
GET    /researcher/v1/uploadSchemas                           @controllers.UploadSchemaController.getUploadSchemasForStudy
POST   /researcher/v1/uploadSchemas                           @controllers.UploadSchemaController.createOrUpdateUploadSchema
GET    /researcher/v1/uploadSchemas/:schemaId                 @controllers.UploadSchemaController.getUploadSchema(schemaId: String)
DELETE /researcher/v1/uploadSchemas/:schemaId                 @controllers.UploadSchemaController.deleteUploadSchemaById(schemaId: String)
DELETE /researcher/v1/uploadSchemas/:schemaId/revisions/:rev  @controllers.UploadSchemaController.deleteUploadSchemaByIdAndRev(schemaId: String, rev: Int)

# Admin - Studies
GET    /admin/v1/studies/:identifier  @controllers.StudyController.getStudy(identifier: String)
POST   /admin/v1/studies/:identifier  @controllers.StudyController.updateStudy(identifier: String)
GET    /admin/v1/studies              @controllers.StudyController.getAllStudies
POST   /admin/v1/studies              @controllers.StudyController.createStudy 
DELETE /admin/v1/studies/:identifier  @controllers.StudyController.deleteStudy(identifier: String)

# Admin - Backfill
GET    /admin/v1/backfill/:name          @controllers.BackfillController.backfill(name: String)
POST   /admin/v1/backfill/:name/start    @controllers.BackfillController.start(name: String)

# Admin - User Management
POST   /admin/v1/users          @controllers.UserManagementController.createUser
DELETE /admin/v1/users          @controllers.UserManagementController.deleteUser(email: java.lang.String ?= null)

# Admin - Cache Management
GET    /admin/v1/cache           @controllers.CacheAdminController.listItems
DELETE /admin/v1/cache/:cacheKey @controllers.CacheAdminController.removeItem(cacheKey: String)

# Lunch
# GET    /api/v1/lunch/where      @controllers.LunchController.where
